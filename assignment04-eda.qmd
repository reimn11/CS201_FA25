---
title: "Assignment 4: Exploratory Data Analysis"
author: "Rei Miyashiro"
date: "`r Sys.Date()`"
format: html
editor: visual
---

## Overview

Due: **Sunday, 9/28 11:59pm**

In this assignment, you will practice Exploratory Data Analysis (EDA) by making plots from a **Kaggle dataset of your choice**.

You will submit **at least 4 different plot types**, with short written interpretations for each.

Part 1 is worth a total of 1 point, and Part 2 is worth 4 points (1 point for each plot & interpretation).

## Part 1: Get Your Data

1.  Go to [Kaggle Datasets](https://www.kaggle.com/datasets), create an account, and choose a dataset that interests you. Ensure your data has:
    1.  At least 4 variables
    2.  At least one categorical and one continuous variable
    3.  I recommend data that contains at least 50-100 observations
    4.  Tip: Open the CSV on Kaggle first and skim the columns to check that it meets these requirements
2.  Download the dataset as a CSV file.
3.  Place the CSV in your class R project data folder.
4.  Read it into R with `read_csv()`.

```{r, message=FALSE}
library(tidyverse)

mydata <- read_csv("data/VNL2023.csv")

```

### Describe your data

Data author: Yeganeh Bavafa

Link: <https://www.kaggle.com/datasets/yeganehbavafa/vnl-men-2023/data>

Description: He collected and sorted a dataset about volleyball players in Volleyball National League in 2023. In each factor, he have used the average of the player during a game, which was the author of errors, points and percentage of positive performance of that player in each section.

-   Position Feature represent the real position of each player

1.  OH : outside hitter

2.  OP : Opposite hitter

3.  MB : Middle blocker

4.  S : Setter

5.  L : Libero

-   Attack : A player's overall average during each game in the offense factor

-   Block : A player's overall average during each game in the defense factor.\
    Defense on the net includes direct points, errors and touching the ball without changing points.

-   Serve : Except for the libero player, the rest of the players serve during each turn to start the game. Each player's service average during the match is listed here.

-   Set : The setter is responsible for setting the players. But in special cases, the rest of the players cooperate in this matter, and in the data analysis, we will find out which position the players have the most participation in setting after the setter.

-   Set feature represent the average of successful sets, errors and attempts for each ball during a rally.

-   Dig : the average of digs, errors and receptions

-   Receive : Receive feature also represents the average of successful receptions, errors and attempts per mach.

### Preview your data

Use some of the strategies you've learned in this class or picked up elsewhere to summarize and quickly explore your data.

```{r}
library(dplyr)
View(mydata)
summary(mydata)

```

### Summary stats

Before you make plots, you must also:

-   Show basic summaries of your dataset, including:

    -   `count()` for categorical variables (to see category frequencies)

    -   `mean()`, `median()`, `sd()`, `min()`, `max()` for at least one numeric variable

```{r}
# See how many people in each position
mydata %>%
    count(Position)
# See how many peopke in each country
mydata %>%
  count(Country)
# See how many peopke in each country
mydata %>%
  count(Age)


# See the mean value of Age
mean(mydata$Age)

# See the mean value of Age each Position
mydata %>%
  group_by(Position) %>%
  summarise(mean_age = mean(Age), na.rm = TRUE)

#See the mean value of Attack in each country without Libero and Setter
mydata %>%
  filter(Position %in% c('OH', 'MB', "OP")) %>%
  group_by(Country) %>%
  summarise(mean_attack_country = mean(Attack, na.rm=TRUE)) %>%
  arrange(mean_attack_country)

#See the mean value of Attack in each age without Libero and Setter
mydata %>%
  filter(Position %in% c('OH', 'MB', "OP")) %>%
  group_by(Age) %>%
  summarise(mean_attack_age = mean(Attack, na.rm=TRUE)) %>%
  arrange(mean_attack_age)
  
#See the mean value of Block in each country without Libero 
mydata %>%
  filter(Position != 'L') %>%
  group_by(Country) %>%
  summarise(mean_block_country = mean(Block, na.rm=TRUE)) %>%
  arrange(mean_block_country)

#See the mean value of Block in each age without Libero and Setter
mydata %>%
  filter(Position %in% c('OH', 'MB', "OP")) %>%
  group_by(Age) %>%
  summarise(mean_block_age = mean(Block, na.rm=TRUE)) %>%
  arrange(mean_block_age)

# See the mean value of Set in each country
mydata %>%
  filter(Position == 'S') %>%
  group_by(Country) %>%
  summarise(mean_set_country = mean(Set, na.rm=TRUE)) %>%
  arrange(mean_set_country)

# See the mean value of Set in each age
mydata %>%
  filter(Position == 'S') %>%
  group_by(Age) %>%
  summarise(mean_set_age = mean(Set, na.rm=TRUE)) %>%
  arrange(mean_set_age)






# See the median of Attack of each Position
mydata %>%
  group_by(Position) %>%
  summarise(median_attack = median(Attack, na.rm = TRUE))

# See the median of Dig of each Position
mydata %>%
  group_by(Position) %>%
  summarise(median_dig = median(Dig, na.rm = TRUE)) %>%
  arrange(desc(median_dig))

# See the median value of Attack in each country without Libero and Setter
mydata %>%
  filter(Position %in% c('OH', 'MB', "OP")) %>%
  group_by(Country) %>%
  summarise(median_attack_country = median(Attack, na.rm=TRUE)) %>%
  arrange(median_attack_country)



# See the Satndard Deviation of Age
sd(mydata$Age)


# See the minimum of Age
min(mydata$Age)

# See the minimum rate of the Attack in each country without Libero and Setter
mydata %>%
  filter(Position %in% c('OH', 'MB', "OP")) %>%
  group_by(Country) %>%
  summarise(min_attack_country = min(Attack, na.rm = TRUE)) %>%
  arrange(min_attack_country)
  


# See the max value of Age
max(mydata$Age)
```

Write 2â€“3 sentences here: What do the category counts tell you? What does the numeric summary show about spread, center, or outliers?

The category counts show how players distributed. Outside Hitters are the most common position. And the numeric summaries reveal that setters (S) and liberos (L) tend to be older on average compared to attacking positions. When I see the Attack and Block by age, it shows wide variability, so it looks age doesn't reflect the their performance.

## Part 2:

Create **at least 4 plots**, each of a different type. At least one of your four plots must use different variables than the others.

Each plot should have:

-   A title and labeled axesy

-   y

Use the EDA Part 3 notes as your reference. Since this is an EDA assignment, your plots can be plain, but consider adding colors, themes, or interactivity for interpretability and visual appeal if you know how.

### Plot 1

```{r}
# insert code here
# See the set accuracy by each country
mydata %>%
  filter(Position == 'S') %>% # filternign to setters only
  ggplot(aes(x = Set, y = fct_reorder(Country, Set, median))) +
  geom_boxplot() +
  labs(
    title = "Set Distribution by Country (only Setters)",
    x = "Set",
    y = "Country"
  )


```

Interpretation:

I searched this competition's competition's standing. 1, USA 2, Japan 3, Poland 4, Italy 5, Argentina 6, Brazil ... High rank countries tend to have high set accuracy. In this plot, we can see 1, Argentina 2, Italy 3, USA 4, Japan 5, Brazil ... So, on the volleyball court, having a good setter in the team can be one of the most important aspects to win the game.

### Plot 2

```{r}
# insert code here

# See the Serve distribution by position (excluding Libero)

mydata %>%
  filter(!Position %in% c("L")) %>% #Libero doesn't serve
  group_by(Position) %>%
  ggplot(aes(x = Position, y = Serve)) +
  geom_violin() +
  labs(
    title = "Serve distribution by position (excluding Libero)",
    x = "Position",
    y = "Serve"
  )

```

Interpretation:

OP has the widest and highest distribution of the Serve value. OH and MB are the mid-range. S shows the lowest Serve values and a relatively tight spread in this dataset. From my experience, MB, OH, and OP players tend to be of high height, so it can be an advantage for serving compared to the setter.

### Plot 3

```{r}
# insert code here

# See mean attack by age
mydata %>%
  filter(Position %in% c('MB', 'OH', 'OP')) %>%
  group_by(Age) %>%
  summarize(mean_attack = mean(Attack)) %>%
  ggplot(aes(x = Age, y = mean_attack)) +
  geom_line() +
labs(
    title = "Mean Attack by age (excluding Libero(L) and Setter(S))",
    x = "Age",
    y = "Mean Attack"
  )

```

Interpretation:

This summarizes the average Attack at each age for attackers(OH, OP, MB). The curve indicates that the relationship between age and attack is not simple. We can see the peak in the early 20s. On the contrary, some dips in the middle of the 20s and the end of the 30s. Because some ages have a low number (n), it can be driven by a few players. In this dataset, age alone doesn't explain Attack well for attackers (OH, MB, OP).

### Plot 4

```{r}
# insert code here
#See the relationship between serve and attack

mydata %>%
  filter(Position != 'L') %>%
  ggplot(aes(x = Attack, y = Serve)) +
  geom_point(alpha = 0.5) +
  labs(
    title = "Serve vs Attack",
    x = "Attack",
    y = "Serve"
  )

mydata %>%
ggplot(aes(Attack, Serve, color = Position)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE)

```

Interpretation:

This result show that clear positive relationship that with player higher attack tend to higher serve. This scatter plot shows positive covariation between Attack and Serve.

## Push to GitHub to Submit!

Assignment is due Sunday 9/28 at 11:59 pm.
